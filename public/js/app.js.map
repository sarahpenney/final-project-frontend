{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js","js/router.js","js/models/user.js","js/controllers/users.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","console","log","register","user","signup","then","go","this","LoginController","login","credentials","authenticate","provider","res","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","User","$resource","id","update","method","UsersIndexController","usersIndex","all","query","UsersShowController","deleteUser","usersShow","$remove","get","params","delete","UsersEditController","usersEdit","$update","angular","module","constant","config","$inject","factory"],"mappings":"YAKA,SAASA,MAAKC,EAAeC,GAC3BD,EAAcE,SAAcD,EAA5B,SACAD,EAAcG,UAAeF,EAA7B,YAEAD,EAAcI,YAAc,GCJ9B,QAASC,oBAAmBC,EAAOC,GAMjC,QAASC,KACPC,QAAQC,IAAI,KAAKC,EAASC,MAC1BN,EAAMO,OAAOF,EAASC,MACnBE,KAAK,WACJL,QAAQC,IAAI,WACZH,EAAOQ,GAAG,WAThB,GAAMJ,GAAWK,IAEjBL,GAASC,QAWTD,EAASH,OAASA,EAIpB,QAASS,iBAAgBX,EAAOC,GAK9B,QAASC,KACPF,EAAMY,MAAMA,EAAMC,aACfL,KAAK,WACJP,EAAOQ,GAAG,gBAIhB,QAASK,GAAaC,GACpBf,EAAMc,aAAaC,GAClBP,KAAK,SAACQ,GACLb,QAAQC,IAAIY,KAdhB,GAAMJ,GAAQF,IAEdE,GAAMC,eAgBND,EAAMV,OAASA,EACfU,EAAME,aAAeA,ECxCvB,QAASG,gBAAejB,EAAOC,EAAQiB,GAMrC,QAASC,KACPnB,EAAMmB,SACLX,KAAK,WACJP,EAAOQ,GAAG,gBAMd,QAASW,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,KACfrB,QAAQC,IAAIkB,IACRtB,EAAMyB,mBAAqBC,EAAgBC,SAASL,EAAQM,QAC9DP,EAAEQ,iBACF5B,EAAOQ,GAAG,SACVc,EAAKC,QAAU,sCApBnB,GAAMD,GAAOb,IAEba,GAAKO,WAAa9B,EAAMyB,gBACxBF,EAAKC,QAAU,IASf,IAAME,IAAmB,YAAa,WActCR,GAAWa,IAAI,oBAAqBX,GAEpCG,EAAKJ,OAASA,EC7BhB,QAASa,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,cACLC,IAAK,SACLC,YAAa,6BACbC,WAAY,uCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,2BACbC,WAAY,qCAEbH,MAAM,aACLC,IAAK,kBACLC,YAAa,2BACbC,WAAY,qCAGhBJ,EAAmBK,UAAU,UC5B/B,QAASC,MAAKC,EAAW9C,GACvB,MAAO,IAAI8C,GAAa9C,EAAjB,cAAwC+C,GAAI,QACjDC,QAAUC,OAAQ,SCAtB,QAASC,sBAAqBL,GAC5B,GAAMM,GAAapC,IAEnBoC,GAAWC,IAAMP,EAAKQ,QAKxB,QAASC,qBAAoBT,EAAMvC,EAAQD,GAKzC,QAASkD,KACPC,EAAU7C,KAAK8C,QAAQ,WACrBnD,EAAOQ,GAAG,gBANd,GAAM0C,GAAYzC,IAElByC,GAAU7C,KAAOkC,EAAKa,IAAIpD,EAAOqD,QAQjCH,EAAUI,OAASL,EACnBC,EAAUrB,WAAa9B,EAAMyB,gBAK/B,QAAS+B,qBAAoBhB,EAAMvC,GAKjC,QAAS0C,KACPc,EAAUnD,KAAKoD,QAAQ,WACrBzD,EAAOQ,GAAG,YAAaR,EAAOqD,UANlC,GAAMG,GAAY/C,IAElB+C,GAAUnD,KAAOkC,EAAKa,IAAIpD,EAAOqD,QAQjC5C,KAAKiC,OAASA,EL1ChBgB,QAAQC,OAAO,gBAAiB,aAAc,YAAa,eACxDC,SAAS,UAAW,2CACpBC,OAAOrE,MAEVA,KAAKsE,SAAW,gBAAiB,WCJjCJ,QAAQC,OAAO,gBACZtB,WAAW,qBAAsBvC,oBACjCuC,WAAW,kBAAmB3B,iBAEjCZ,mBAAmBgE,SAAW,QAAS,UAmBvCpD,gBAAgBoD,SAAW,QAAS,UCvBpCJ,QAAQC,OAAO,gBACdtB,WAAW,iBAAkBrB,gBAE9BA,eAAe8C,SAAW,QAAS,SAAU,cCH7CJ,QAAQC,OAAO,gBACZE,OAAO9B,QAEVA,OAAO+B,SAAW,iBAAkB,sBCHpCJ,QAAQC,OAAO,gBACZI,QAAQ,OAAQxB,MAEnBA,KAAKuB,SAAW,YAAa,WCH7BJ,QAAQC,OAAO,gBACZtB,WAAW,uBAAwBO,sBACnCP,WAAW,sBAAuBW,qBAClCX,WAAW,sBAAuBkB,qBAErCX,qBAAqBkB,SAAW,QAQhCd,oBAAoBc,SAAW,OAAQ,SAAU,SAiBjDP,oBAAoBO,SAAW,OAAQ","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'https://organisms-api.herokuapp.com/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    console.log('Yo',register.user);\n    $auth.signup(register.user)\n      .then(() => {\n        console.log('pew pew');\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n    });\n  }\n\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('finalProject')\n.controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  const protectedStates = ['usersEdit', 'usersNew'];\n\n  function secureState(e, toState) {\n    main.message = null;\n    console.log(toState);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      $state.go('login');\n      main.message = 'You must be logged in to go there!';\n\n    }\n\n  }\n\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: 'templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: 'templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    });\n\n  $urlRouterProvider.otherwise('/users');\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n\n}\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth) {\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n"]}